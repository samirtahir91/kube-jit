apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-jit-api.fullname" . }}
  labels:
    {{- include "kube-jit-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kube-jit-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-jit-api.selectorLabels" . | nindent 8 }}
        {{- if hasKey .Values.serviceAccount.annotations "azure.workload.identity/client-id" }}
        azure.workload.identity/use: "true"
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-jit-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.db.cloudSqlProxy.enabled }}
        - name: cloud-sql-proxy
          image: {{ quote .Values.db.cloudSqlProxy.image | default "gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.2" }}
          args:
            - "{{ .Values.db.cloudSqlProxy.cloudSqlInstance }}"
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=5432"
            {{- if .Values.db.cloudSqlProxy.usePrivateIp }}
            - "--private-ip"
            {{- end }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
          resources:
            {{- toYaml .Values.db.cloudSqlProxy.resources | nindent 12 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: CLOUD_SQL_PROXY_ENABLED
            value: {{ quote (ternary "true" "false" .Values.db.cloudSqlProxy.enabled) }}
          - name: CONFIG_MOUNT_PATH
            value: {{ quote .Values.config.configMountPath | default "/etc/config/" }}
          - name: ALLOW_ORIGINS
            value: '{{ .Values.config.cors.allowOrigins | toJson }}'
          - name: CALLBACK_HOST_OVERRIDE
            {{- if .Values.ingress.enabled }}
            value: {{ quote .Values.config.callbackHostOverride | default .Values.ingress.hosts }}
            {{- else }}
            value: {{ quote .Values.config.callbackHostOverride }}
            {{- end }}
          - name: LISTEN_PORT
            value: {{ quote .Values.service.port }}
          - name: OAUTH_PROVIDER
            value: {{ .Values.config.oauth.provider }}
          - name: OAUTH_CLIENT_ID
            value: {{ .Values.config.oauth.clientID }}
          - name: OAUTH_REDIRECT_URI
            value: {{ .Values.config.oauth.redirectUri }}
          - name: OAUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: kube-jit-api-secrets
                key: {{ .Values.config.oauth.clientSecretKeyRef }}
          {{- if eq .Values.config.oauth.provider "azure" }}
          - name: AZURE_AUTH_URL
            value: {{ .Values.config.oauth.azureAuthUrl }}
          - name: AZURE_TOKEN_URL
            value: {{ .Values.config.oauth.azureTokenUrl }}
          {{- end }}
          # Database environment variables
          - name: DB_HOST
            value: {{ if .Values.db.cloudSqlProxy.enabled }}"127.0.0.1"{{ else }}{{ quote .Values.db.host }}{{ end }}
          - name: DB_PORT
            value: {{ if .Values.db.cloudSqlProxy.enabled }}"5432"{{ else }}{{ quote .Values.db.port }}{{ end }}
          - name: DB_NAME
            value: {{ quote .Values.db.name }}
          - name: DB_CONN_TIMEOUT
            value: {{ quote .Values.db.connTimeout }}
          - name: DB_SSLMODE
            value: {{ if .Values.db.cloudSqlProxy.enabled }}"disable"{{ else }}{{ quote .Values.db.sslMode }}{{ end }}
          - name: DB_TIMEZONE
            value: {{ quote .Values.db.timezone }}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: kube-jit-api-secrets
                key: {{ .Values.db.userSecretKey }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kube-jit-api-secrets
                key: {{ .Values.db.passwordSecretKey }}
          - name: DB_MAX_OPEN_CONNS
            value: {{ quote .Values.db.maxOpenConns }}
          - name: DB_MAX_IDLE_CONNS
            value: {{ quote .Values.db.maxIdleConns }}
          - name: DB_CONN_MAX_LIFETIME
            value: {{ quote .Values.db.connMaxLifetime }}
          - name: DB_CONN_MAX_IDLE_TIME
            value: {{ quote .Values.db.connMaxIdleTime }}
          - name: DB_DEBUG
            value: {{ .Values.db.debug | quote }}
          - name: HMAC_SECRET
            valueFrom:
              secretKeyRef:
                key: {{ .Values.config.hmacSecretKey }}
                name: kube-jit-api-secrets
          - name: COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                key: {{ .Values.config.oauth.cookieSecretKey }}
                name: kube-jit-api-secrets
          - name: COOKIE_SAMESITE
            value: {{ .Values.config.oauth.cookieSameSite | quote }}
          - name: DEBUG_LOG
            value: {{ .Values.config.debugLog | quote }}
          {{- if not .Values.config.debugLog }}
          - name: GIN_MODE
            value: release
          {{- end }}
          - name: API_NAMESPACE
            valueFrom:
              fieldRef:
                  fieldPath: metadata.namespace
          - name: BUILD_SHA
            value: {{ .Values.buildSha | quote }}
          {{- if .Values.config.smtp.enabled }}
          - name: SMTP_HOST
            value: {{ .Values.config.smtp.host | quote }}
          - name: SMTP_PORT
            value: {{ .Values.config.smtp.port | quote }}
          - name: SMTP_USER
            value: {{ .Values.config.smtp.user | quote }}
          - name: SMTP_FROM
            value: {{ .Values.config.smtp.from | quote }}
          {{- if .Values.config.smtp.passSecretKey }}
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                name: kube-jit-api-secrets
                key: {{ .Values.config.smtp.passSecretKey | quote }}
          {{- else }}
          - name: SMTP_PASS
            value: ""
          {{- end }}
          {{- end }}
          volumeMounts:
          - name: config
            mountPath: {{ printf "%s/apiConfig.yaml" (.Values.config.configMountPath | default "/etc/config") | quote }}
            subPath: clusters.yaml
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /kube-jit-api/healthz
              port: http
          readinessProbe:
            httpGet:
              path: /kube-jit-api/healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: api-config
          items:
          - key: apiConfig
            path: clusters.yaml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
